{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/clip-art-images/ij.png';\nimport _imports_1 from '@/assets/clip-art-images/ijeri-logo-text.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-e0c2cb58\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"header-wrapper\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"a\", {\n  class: \"logo\",\n  href: \"#HOME\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"logo-icon logo-spin\",\n  src: _imports_0\n}), /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"logo-text\",\n  src: _imports_1\n})], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"hamburger-menu\",\n  type: \"button\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_menu_svg = _resolveComponent(\"menu-svg\");\n  return _openBlock(), _createElementBlock(\"header\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", _hoisted_3, [_createVNode(_component_menu_svg, {\n    color: '#000000'\n  })])]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","class","_createElementVNode","href","src","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_menu_svg","color"],"sources":["/Users/ijeriomitogun/Projects/TypescriptProjects/portfolio-site-2.0/src/components/floating-header.vue"],"sourcesContent":["<template>\n  <header class=\"header-wrapper\">\n    <a class=\"logo\" href=\"#HOME\">\n      <img class=\"logo-icon logo-spin\" src=\"@/assets/clip-art-images/ij.png\" />\n      <img\n        class=\"logo-text\"\n        src=\"@/assets/clip-art-images/ijeri-logo-text.png\"\n      />\n    </a>\n    <button class=\"hamburger-menu\" type=\"button\">\n      <menu-svg :color=\"'#000000'\"> </menu-svg>\n    </button>\n  </header>\n</template>\n<script>\nimport MenuSvg from \"./menu-svg.vue\";\nexport default {\n  name: \"floating-header\",\n  components: {\n    \"menu-svg\": MenuSvg,\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"@/scss/variables.scss\";\n\n.header-wrapper {\n  width: 90%;\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: space-between;\n}\n.logo {\n  display: inline-flex;\n  order: 1;\n  align-self: center;\n  cursor: pointer;\n}\n.logo-icon {\n  margin: -20px;\n  align-self: center;\n  width: 100px;\n}\n.logo-text {\n  align-self: center;\n  width: 100px;\n  margin-bottom: -10px;\n}\n.hamburger-menu {\n  order: 2;\n  transform: scaleX(-1);\n  background-color: transparent;\n  border: none;\n  padding: 5px;\n  cursor: pointer;\n}\n.hamburger-menu > svg {\n  width: 50px;\n  height: 50px;\n}\n.logo-spin {\n  animation-name: spin;\n  animation-duration: 1000ms;\n  animation-iteration-count: 1;\n  animation-timing-function: cubic-bezier(0.1, 0.3, 0.8, 1);\n  animation-timing-function: linear;\n}\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(-360deg);\n  }\n}\n.logo-text-appear {\n}\n.logo-text-disappear {\n}\n@media screen and (max-width: $phone-screen-width) {\n  .hamburger-menu {\n    padding: 0px;\n  }\n  .logo-icon {\n    width: 75px;\n  }\n  .logo-text {\n    width: 75px;\n  }\n}\n@media screen and (max-width: $small-screen-width) {\n  .hamburger-menu {\n    display: block;\n  }\n  .header-wrapper {\n    justify-content: space-between;\n  }\n}\n</style>\n"],"mappings":";OAGuCA,UAAqC;OAGpEC,UAAkD;;;EALhDC,KAAK,EAAC;AAAgB;gEAC5BC,mBAAA,CAMI;EANDD,KAAK,EAAC,MAAM;EAACE,IAAI,EAAC;iBACnBD,mBAAA,CAAyE;EAApED,KAAK,EAAC,qBAAqB;EAACG,GAAqC,EAArCL;iBACjCG,mBAAA,CAGE;EAFAD,KAAK,EAAC,WAAW;EACjBG,GAAkD,EAAlDJ;;;EAGIC,KAAK,EAAC,gBAAgB;EAACI,IAAI,EAAC;;;;uBARtCC,mBAAA,CAWS,UAXTC,UAWS,GAVPC,UAMI,EACJN,mBAAA,CAES,UAFTO,UAES,GADPC,YAAA,CAAyCC,mBAAA;IAA9BC,KAAK,EAAE;EAAS,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}